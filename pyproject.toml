[tool.poetry]
name = "soli-data-generator"
version = "0.1.1"
description = "Python library for SOLI data generation"
authors = ["ALEA Institute <hello@aleainstitute.ai>"]
license = "MIT"
readme = "README.md"
homepage = "https://openlegalstandard.org/"
repository = "https://github.com/alea-institute/soli-data-generator"
documentation = "https://github.com/alea-institute/soli-data-generator"
keywords = ["legal", "information", "standard", "soli", "open"]

# dist build configuration
include = ["soli_data_generator"]
packages = [{ include = "soli_data_generator" }]
exclude = ["tests", "docs", "examples", "docker"]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Intended Audience :: Legal Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: XML",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Utilities"
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0.0"
alea-llm-client = "^0.1.0"
soli-python = "^0.1.4"
faker = "^28.4.1"



[tool.poetry.group.dev.dependencies]
types-lxml = "^2024.8.7"
sphinx = "^7.4.7"
black = "^24.4.2"
myst-parser = "^3.0.1"
sphinx-book-theme = "^1.1.3"
sphinxcontrib-mermaid = "^0.9.2"
pytest = "^8.3.1"
pytest-asyncio = "^0.23.8"
pytest-benchmark = "^4.0.0"
pytest-cov = "^5.0.0"
pylint = "^3.2.7"
sphinx-copybutton = "^0.5.2"
sphinxext-opengraph = "^0.9.1"
sphinx-plausible = "^0.1.2"

[tool.poetry.group.search.dependencies]
rapidfuzz = "^3.9.7"
marisa-trie = "^1.2.0"

# extras
[tool.poetry.extras]
search = ["rapidfuzz", "marisa-trie"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pylint]
max-line-length = 120
disable = [
    "line-too-long",
    "too-few-public-methods",
    "no-self-argument",
    "cyclic-import"
]
extension-pkg-allow-list = ["lxml"]
ignore-patterns = ["test_.*?.py", "conftest.py"]

[tool.pylint.messages_control]
max-args = 10
max-attributes = 15
max-branches = 15
max-locals = 25
min-public-methods = 0

[tool.isort]
profile = "black"
line_length = 120

[tool.pytest.ini_options]
addopts = "--cov=soli_data_generator --cov-report=term-missing --cov-report=xml --cov-report=html"
